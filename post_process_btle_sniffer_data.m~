function [T, fig, s37, s38, s39] = post_process_btle_sniffer_data(filename)
% Post process a data file collected with the btle_sniffer.py script.  Plot
% data on a channel-by-channel basis.  Return values are:
%
%   T - Matlab table containing all data
%   fig - the figure handle containing plots
%   s37 - object containing stats for ch 37, index as 'min', 'max', etc.
%   s38 - object containing stats for ch 38, index as 'min', 'max', etc.
%   s39 - object containing stats for ch 39, index as 'min', 'max', etc.
%

fid = fopen(filename,'r');

% read all line from the file
tline = fgetl(fid);
btleCnt = 1
while ischar(tline)
    fields = split(tline,',')
    if strcmp(fields{2},'Environment')
        % This is an info field containing metadata
        metadata.timestamp = fields{1}
        metadata.env = fields{3}
    elseif strcmp(fields{2},'Device')
        % This is an info field containing metadata
        metadata.device = fields{3}
    elseif strcmp(fields{2},'Range')
        % This is an info field containing metadata
        metadata.range = fields{3}
    elseif strcmp(fields{2},'Angle')
        % This is an info field containing metadata
        metadata.angle = fields{3}
    elseif strcmp(fields{2},'TxPower')
        % This is an info field containing metadata
        metadata.txPower = fields{3}
    elseif strcmp(fields{2},'GPS')
        % This is an info field containing metadata
        metadata.gps = fields{3}
    elseif strcmp(fields{2},'Bluetooth')
        % This is a data field
        if length(fields) == 7
            btle.timestamp{btleCnt} = fields{1}
            btle.addr{btleCnt} = fields{3}
            btle.rssi{btleCnt} = int(fields{4})
            btle.txPower{btleCnt} = int(fields{5})
            btle.time{btleCnt} = float(fields{6})
            btle.chan{btleCnt} = int(fields{7})
            btleCnt = btleCnt + 1
        else
            disp('Error, incorrect numer of fields in btle record!')
        end
    end
    tline = fgetl(fid);
end

fclose(fid);

% filter by BTLE channel
T_37=btle.rssi(btle.chan == 37);
T_38=btle.rssi(btle.chan == 38,:);
T_39=btle.rssi(btle.chan == 39,:);

% generate plots
fig = figure(1); 
subplot(3,1,1); 
plot(T_37); 
subplot(3,1,2); 
plot(T_38); 
subplot(3,1,3); 
plot(T_39);

s37 = containers.Map({'min','max','mean','median','mode','std','range'}, ...
                       [min(T_37), ...
                       max(T_37), ...
                       mean(T_37), ...
                       median(T_37), ...
                       mode(T_37), ...
                       std(T_37), ...
                       range(T_37)]);
disp('Ch 37 Stats')
disp(['min = ' int2str(s37('min'))])
disp(['max = ' int2str(s37('max'))])
disp(['mean = ' int2str(s37('mean'))])
disp(['median = ' int2str(s37('median'))])
disp(['mode = ' int2str(s37('mode'))])
disp(['std = ' int2str(s37('std'))])
disp(['range = ' int2str(s37('range'))])
fprintf('\n')
               
s38 = containers.Map({'min','max','mean','median','mode','std','range'}, ...
                       [min(T_38), ...
                       max(T_38), ...
                       mean(T_38), ...
                       median(T_38), ...
                       mode(T_38), ...
                       std(T_38), ...
                       range(T_38)]);
                   
disp('Ch 38 Stats')
disp(['min = ' int2str(s38('min'))])
disp(['max = ' int2str(s38('max'))])
disp(['mean = ' int2str(s38('mean'))])
disp(['median = ' int2str(s38('median'))])
disp(['mode = ' int2str(s38('mode'))])
disp(['std = ' int2str(s38('std'))])
disp(['range = ' int2str(s38('range'))])
fprintf('\n')

s39 = containers.Map({'min','max','mean','median','mode','std','range'}, ...
                       [min(T_39), ...
                       max(T_39), ...
                       mean(T_39), ...
                       median(T_39), ...
                       mode(T_39), ...
                       std(T_39), ...
                       range(T_39)]);
disp('Ch 39 Stats')
disp(['min = ' int2str(s39('min'))])
disp(['max = ' int2str(s39('max'))])
disp(['mean = ' int2str(s39('mean'))])
disp(['median = ' int2str(s39('median'))])
disp(['mode = ' int2str(s39('mode'))])
disp(['std = ' int2str(s39('std'))])
disp(['range = ' int2str(s39('range'))])
fprintf('\n')